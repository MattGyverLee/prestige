{
  "name": "prestige",
  "version": "0.1.0",
  "description": "consider yourself described",
  "homepage": "./",
  "main": "public/electron.js",
  "private": true,
  "scripts": {
    "start": "craco start",
    "build": "craco build",
    "test": "craco test",
    "eject": "DON'T craco eject",
    "dist": "electron-builder",
    "web-dev": "env-cmd -f .env.web craco start --config craco.config.web.js",
    "web-prod": "set NODE_ENV=production && env-cmd -f .env.web craco start --config craco.config.web.js",
    "electron-dev-mac": "concurrently \"BROWSER=none yarn start\" \"wait-on http://localhost:3000 && electron .\"",
    "electron-dev": "env-cmd -f .env.electron concurrently \"yarn start \" \"wait-on http://localhost:3000 && electron public/electron-dev.js\"",
    "electron-debug": "env-cmd -f .env.electron craco start",
    "electron-prod": "set NODE_ENV=production && env-cmd -f .env.electron concurrently \"yarn start \" \"wait-on http://localhost:3000 && electron public/electron.js\"",
    "postinstall": "electron-builder install-app-deps",
    "electron-pack": "env-cmd -f .env.electron craco build -w --config craco.config.electron.js",
    "eslint-check": "eslint --print-config . | eslint-config-prettier-check",
    "format": "prettier --write \"src/**/*.js\"",
    "prelint": "eslint src --ext .tsx --ext .js",
    "precommit": "lint-staged",
    "lint": "eslint src --ext .tsx --ext .js"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "dependencies": {
    "axios": "^0.19.0",
    "chokidar": "^3.0.1",
    "classnames": "^2.2.6",
    "dts-gen": "^0.5.8",
    "electron-is-dev": "^1.1.0",
    "electron-json-storage": "^4.1.6",
    "electron-remote": "^1.3.0",
    "env-cmd": "^9.0.3",
    "ffmpeg": "^0.0.4",
    "ffprobe": "^1.1.0",
    "file-url": "3.0.0",
    "fluent-ffmpeg": "^2.1.2",
    "formatted": "^1.0.0",
    "fs-extra": "^8.0.1",
    "material-ui": "^0.20.2",
    "mime": "^2.4.4",
    "moment": "^2.24.0",
    "npm-watch": "^0.6.0",
    "path": "^0.12.7",
    "prop-types": "^15.7.2",
    "react": "^16.8.6",
    "react-bootstrap": "^1.0.0-beta.9",
    "react-datasheet": "^1.3.14",
    "react-dom": "^16.8.6",
    "react-file-drop": "^0.2.8",
    "react-fontawesome": "^1.6.1",
    "react-hot-loader": "^4.11.0",
    "react-icons": "^3.7.0",
    "react-localization": "^1.0.13",
    "react-orbitjs": "^0.1.11",
    "react-player": "^1.11.1",
    "react-redux": "^7.1.0",
    "react-router-dom": "^5.0.1",
    "react-scripts": "^3.0.1",
    "react-select": "^3.0.4",
    "reactn": "^2.1.4",
    "redux": "^4.0.1",
    "redux-thunk": "^2.3.0",
    "request": "^2.88.0",
    "reselect": "^4.0.0",
    "rimraf": "^2.6.3",
    "rxjs": "^6.5.2",
    "screenfull": "^4.2.0",
    "wait-on": "^3.2.0",
    "wavesurfer.js": "^2.2.1",
    "xml2js": "^0.4.19"
  },
  "devDependencies": {
    "@craco/craco": "^5.2.3",
    "@devexpress/dx-core": "^1.11.1",
    "@devexpress/dx-grid-core": "1.11.1",
    "@devexpress/dx-react-core": "^1.11.1",
    "@devexpress/dx-react-grid": "^1.11.1",
    "@devexpress/dx-react-grid-material-ui": "^1.11.1",
    "@fortawesome/fontawesome-svg-core": "^1.2.19",
    "@fortawesome/free-solid-svg-icons": "^5.9.0",
    "@fortawesome/react-fontawesome": "^0.1.4",
    "@hot-loader/react-dom": "^16.8.6",
    "@material-ui/core": "^3.9.2",
    "@material-ui/icons": "^3.0.2",
    "@orbit/coordinator": "^0.15.23",
    "@orbit/core": "^0.15.23",
    "@orbit/data": "^0.15.23",
    "@orbit/indexeddb": "^0.15.25",
    "@orbit/jsonapi": "^0.15.25",
    "@orbit/store": "^0.15.25",
    "@testing-library/react": "^8.0.1",
    "@types/auth0-js": "^9.10.2",
    "@types/classnames": "^2.2.8",
    "@types/jest": "24.0.14",
    "@types/node": "12.0.8",
    "@types/react": "16.8.20",
    "@types/react-dom": "^16.8.4",
    "@types/react-fontawesome": "^1.6.4",
    "@types/react-redux": "^7.1.0",
    "@types/react-router-dom": "^4.3.4",
    "@types/react-select": "^2.0.19",
    "@types/wavesurfer.js": "^2.0.2",
    "@typescript-eslint/eslint-plugin": "1.x",
    "@typescript-eslint/parser": "1.x",
    "babel-eslint": "10.0.1",
    "browserslist": "^4.6.2",
    "concurrently": "^4.1.0",
    "electron": "^5.0.4",
    "electron-builder": "^20.43.0",
    "electron-debug": "^3.0.0",
    "electron-devtools-installer": "^2.2.4",
    "electron-react-devtools": "^0.5.3",
    "eslint": "5.x",
    "eslint-config-prettier": "^6.0.0",
    "eslint-config-react-app": "^4.0.1",
    "eslint-config-recommended": "^4.0.0",
    "eslint-config-standard": "^12.0.0",
    "eslint-plugin-flowtype": "2.x",
    "eslint-plugin-import": "2.x",
    "eslint-plugin-jest": "^22.7.0",
    "eslint-plugin-jsx-a11y": "^6.2.1",
    "eslint-plugin-node": "^9.1.0",
    "eslint-plugin-prettier": "^3.1.0",
    "eslint-plugin-promise": "^4.1.1",
    "eslint-plugin-react": "^7.13.0",
    "eslint-plugin-react-hooks": "^1.6.1",
    "eslint-plugin-standard": "^4.0.0",
    "ffmpeg-static-electron": "^2.0.1",
    "ffprobe-static-electron": "^2.0.0",
    "husky": "^2.4.1",
    "jest-dom": "^3.5.0",
    "lint-staged": "^9.1.0",
    "prettier": "^1.18.2",
    "redux-devtools-extension": "^2.13.8",
    "typescript": "^3.5.2",
    "yarn": "^1.17.2"
  },
  "resolutions": {
    "chokidar/readdirp": "<3.0.3"
  },
  "lint-staged": {
    "src/**/*.js": [
      "eslint src --ext .tsx --ext .js",
      "prettier --write",
      "git add"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "eslintConfig": {
    "extends": "react-app",
    "env": {
      "browser": true,
      "node": true
    }
  },
  "author": {
    "name": "Matthew Lee",
    "email": "langtech_cameroon@sil.org",
    "url": "https://LangTechCameroon.info"
  },
  "build": {
    "appId": "info.LangTechCameroon.prestige",
    "productName": "Prestige",
    "copyright": "Copyright Â© 2019 ${author}",
    "extraFiles": [
      {
        "from": "node_modules/ffprobe-static-electron/bin/${os}/${arch}",
        "to": "resources/bin/${os}/${arch}",
        "filter": [
          "**/*"
        ]
      },
      {
        "from": "node_modules/ffmpeg-static-electron/bin/${os}/${arch}",
        "to": "resources/bin/${os}/${arch}",
        "filter": [
          "**/*"
        ]
      }
    ],
    "win": {
      "icon": "assets/icons/iceberg.ico"
    },
    "mac": {
      "category": "public.app-category.utilities"
    },
    "files": [
      "build/**/*",
      "node_modules/**/*"
    ],
    "directories": {
      "buildResources": "assets"
    }
  }
}
